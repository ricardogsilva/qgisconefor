{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"QGIS Conefor plugin","text":"<p>A QGIS plugin for integrating with Conefor. </p> <p> </p> <p>Documentation: https://ricardogsilva.github.io/qgisconefor</p> <p>Source code: https://github.com/ricardogsilva/qgisconefor</p> <p>This is a QGIS plugin to integrate Conefor into QGIS.</p> <p>It provides a bridge between QGIS and Conefor, allowing you to:</p> <ul> <li>Prepare inputs for Conefor from geospatial files</li> <li>Run Conefor's landscape connectivity analysis algorithms from inside QGIS, through    its Processing framework. The aim is    to provide a convenient environment for landscape and habitat analysis. Conefor algorithms can be directly    integrated in more complex workflows through models and scripts and use all the other GIS algorithms    included in the processing framework.</li> </ul> <p>The plugin also includes a GUI window which can be used solely for preparing inputs to use by Conefor as a separate application.</p>"},{"location":"#installation","title":"Installation","text":"<p>This plugin is available for installation via the main QGIS plugin repository. Inside QGIS, navigate to Plugins -&gt; Manage and Install Plugins..., then search for Conefor and install it</p> Extra - Installing from our custom plugin repo <p>In addition to installing from the official QGIS plugin repository, this plugin is also available for install from  our own custom plugin repo. This may occasionally have a newer version than the one present in the official QGIS repo (the reason being that the QGIS repo is manually curated and it usually takes a while before a new version is approved by its maintainers)</p> <p>It is available at:</p> <p>https://ricardogsilva.github.io/qgisconefor/repo/plugins.xml</p> <ol> <li>Add this custom repository inside QGIS Plugin Manager</li> <li>Refresh the list of available plugins</li> <li>Search for a plugin named Conefor</li> <li>Install it!</li> </ol> <p>Proceed to the User guide section for next steps.</p>"},{"location":"#license","title":"License","text":"<p>This plugin is distributed under the terms of the GNU General Public License version 3</p>"},{"location":"about/","title":"About","text":"<p>Get all information about Conefor at:</p> <p>http://conefor.org/</p> <p>Conefor authors are Santiago Saura and Josep Torn\u00e9. </p> <p>This plugin was developed by Ricardo Garcia Silva with funding from  ETSI Montes, Universidad Polit\u00e9cnica de Madrid.</p> <p>The plugin is released under a GPL license.</p>"},{"location":"changelog-base/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog, and this project adheres to Semantic Versioning.</p>"},{"location":"changelog-base/#unreleased","title":"Unreleased","text":""},{"location":"changelog-base/#203-2024-11-11","title":"2.0.3 - 2024-11-11","text":""},{"location":"changelog-base/#fixed","title":"Fixed","text":"<ul> <li>Internal plugin directory renamed to have the same name as the plugin package</li> </ul>"},{"location":"changelog-base/#202-2024-11-11","title":"2.0.2 - 2024-11-11","text":""},{"location":"changelog-base/#fixed_1","title":"Fixed","text":"<ul> <li>Renamed license file to <code>LICENSE</code> and included it in the generated zip for publishing in main QGIS plugins portal</li> </ul>"},{"location":"changelog-base/#201-2024-11-11","title":"2.0.1 - 2024-11-11","text":""},{"location":"changelog-base/#fixed_2","title":"Fixed","text":"<ul> <li>Dropped the 'experimental' flag</li> </ul>"},{"location":"changelog-base/#200-2024-11-11","title":"2.0.0 - 2024-11-11","text":""},{"location":"changelog-base/#added","title":"Added","text":"<ul> <li>First public release in 9 years!</li> <li>Update plugin to QGIS v3.x</li> <li>Use native QGIS features like background tasks, main message bar, processing algorithms, etc.</li> </ul>"},{"location":"changelog-base/#200-rc9-2024-11-06","title":"2.0.0-rc9 - 2024-11-06","text":""},{"location":"changelog-base/#changed","title":"Changed","text":"<ul> <li>Name of node file changed to not mention name of autogenerated attribute (in order to make filename shorter)</li> </ul>"},{"location":"changelog-base/#fixed_3","title":"Fixed","text":"<ul> <li>Fixed plugin reload crashing QGIS due to erroneous removal of menu entry</li> </ul>"},{"location":"changelog-base/#200-rc8-2024-10-26-yanked","title":"2.0.0-rc8 - 2024-10-26 [YANKED]","text":""},{"location":"changelog-base/#fixed_4","title":"Fixed","text":"<ul> <li>Fixed error due to unused Processing input parameter having been removed, but still called</li> </ul>"},{"location":"changelog-base/#200-rc7-2024-10-17-yanked","title":"2.0.0-rc7 - 2024-10-17 [YANKED]","text":""},{"location":"changelog-base/#changed_1","title":"Changed","text":"<ul> <li>Improved user guide</li> </ul>"},{"location":"changelog-base/#removed","title":"Removed","text":"<ul> <li>Removed distance_threshold processing parameter - it was not used in the main plugin dialog</li> </ul>"},{"location":"changelog-base/#200-rc6-2024-10-16-yanked","title":"2.0.0-rc6 - 2024-10-16 [YANKED]","text":""},{"location":"changelog-base/#fixed_5","title":"Fixed","text":"<ul> <li>Node and connections files are named after their original layer again</li> </ul>"},{"location":"changelog-base/#200-rc5-2024-10-11-yanked","title":"2.0.0-rc5 - 2024-10-11 [YANKED]","text":""},{"location":"changelog-base/#added_1","title":"Added","text":"<ul> <li>Generate a new layer whenever node id or node attribute are not set with autogenerated values for these    missing properties</li> </ul>"},{"location":"changelog-base/#changed_2","title":"Changed","text":"<ul> <li>Adjusted size of columns in the custom dialog so that the last one is not bigger than the rest</li> <li>Renamed distance files from 'connections_[edge|centroid]-distance_' to the simpler 'distances_[edges|centroids]_'</li> <li>Simplified UI labels</li> </ul>"},{"location":"changelog-base/#removed_1","title":"Removed","text":"<ul> <li>Removed demo processing algorithms that interface with Conefor standalone</li> <li>Removed option for creating an output vector layer with the distances from the main plugin dialog</li> </ul>"},{"location":"changelog-base/#fixed_6","title":"Fixed","text":"<ul> <li>Progress display now takes into account the total number of lines to be written</li> <li>Will now re-analyze layers whenever their attribute table changes</li> </ul>"},{"location":"changelog-base/#200-rc4-2024-07-28","title":"2.0.0-rc4 - 2024-07-28","text":""},{"location":"changelog-base/#added_2","title":"Added","text":"<ul> <li>Add support for generating the 'nodes to add' column when preparing conefor input node files</li> <li>Add validation of node-related attributes when using the processing algorithm that prepares conefor inputs</li> <li>Add button for opening output dir upon successful completion</li> </ul>"},{"location":"changelog-base/#changed_3","title":"Changed","text":"<ul> <li>Start autogenerated node ids from one rather than zero</li> </ul>"},{"location":"changelog-base/#fixed_7","title":"Fixed","text":"<ul> <li>Disable plugin main dialog by default</li> <li>Fix main dialog always using default values for layers</li> <li>Fix 'lock attributes to first layer' button not working</li> <li>Fix node connection method always being set to 'edge distance' when running</li> <li>Prevent using a float attribute as the node identifier</li> </ul>"},{"location":"changelog-base/#removed_2","title":"Removed","text":"<ul> <li>Drop support for point layers in the main plugin dialog   via the main plugin dialog</li> </ul>"},{"location":"changelog-base/#200-rc3-2024-07-17","title":"2.0.0-rc3 - 2024-07-17","text":""},{"location":"changelog-base/#changed_4","title":"Changed","text":"<ul> <li>Fixed docs update when a new release is tagged</li> </ul>"},{"location":"changelog-base/#200-rc2-2024-07-17","title":"2.0.0-rc2 - 2024-07-17","text":""},{"location":"changelog-base/#changed_5","title":"Changed","text":"<ul> <li>Update docs</li> </ul>"},{"location":"changelog-base/#200-rc1-2024-07-17","title":"2.0.0-rc1 - 2024-07-17","text":""},{"location":"changelog-base/#added_3","title":"Added","text":"<ul> <li>Added Changelog</li> <li>Manage dev workflows with pluginadmin</li> <li>Generation of Conefor inputs can be cancelled by the user</li> </ul>"},{"location":"changelog-base/#changed_6","title":"Changed","text":"<ul> <li>Ported code to Python3 and QGIS v3</li> <li>Moved to src layout</li> <li>Converted README to markdown</li> <li>Move business logic outside of plugin dialog</li> <li>Measure areas using QGIS project's ellipsoid</li> <li>Use Processing algorithm also for powering dialog-based execution </li> <li>Use QgsTask and QgsTaskManager instead of QThreads with locks</li> <li>Use QgsDistanceArea for area and distance calculations</li> <li>Use QgsMessageBar for communication instead of a custom QLabel</li> </ul>"},{"location":"changelog-base/#121-2015-06-13","title":"1.2.1 - 2015-06-13","text":""},{"location":"changelog-base/#changed_7","title":"Changed","text":"<ul> <li>Fixed bugs</li> </ul>"},{"location":"changelog-base/#12-2015-06-10","title":"1.2 - 2015-06-10","text":""},{"location":"changelog-base/#changed_8","title":"Changed","text":"<ul> <li>Adapted code to run with QGIS v2.8</li> </ul>"},{"location":"changelog-base/#110-","title":"1.1.0 - ???","text":""},{"location":"changelog-base/#changed_9","title":"Changed","text":"<ul> <li>Adapted code to cope with Processing API changes</li> </ul>"},{"location":"changelog-base/#100-","title":"1.0.0 - ???","text":""},{"location":"changelog-base/#added_4","title":"Added","text":"<ul> <li>First stable release</li> </ul>"},{"location":"development/","title":"Development","text":"<p>This plugin uses poetry and typer for aiding in development.</p> <p>The general instructions for development are:</p> <ul> <li>Have QGIS, poetry and typer installed locally</li> <li>Fork the code repository</li> <li>Clone your fork locally</li> <li>Install poetry</li> <li> <p>Install the plugin dependencies into a new virtual env with</p> <pre><code>cd qgis_geonode\npoetry install\n</code></pre> </li> <li> <p>Place the QGIS Python-related libraries into the virtualenv created by poetry by using our custom CLI command </p> <pre><code>cd qgis_geonode\npoetry run pluginadmin install-qgis-into-venv\n</code></pre> </li> <li> <p>Work on a feature/bug on a new branch</p> </li> <li> <p>Test things out locally by installing the plugin with our custom CLI command</p> <pre><code>poetry run pluginadmin install\n</code></pre> </li> <li> <p>When ready, submit a PR for your code to be reviewed and merged</p> </li> </ul>"},{"location":"development/#pluginadmin","title":"pluginadmin","text":"<p>This plugin comes with a <code>pluginadmin</code> CLI command which provides commands useful for development. It is used to perform all operations related to the plugin:</p> <ul> <li>Install the plugin to your local QGIS user profile</li> <li>Ensure your virtual env has access to the QGIS Python bindings</li> <li>Build a zip of the plugin</li> <li>etc.</li> </ul> <p>It is run inside the virtual environment created by poetry. As such it must be invoked like this:</p> <pre><code># get an overview of existing commands\npoetry run python pluginadmin --help\n</code></pre>"},{"location":"development/#install-plugin-into-your-local-qgis-python-plugins-directory","title":"Install plugin into your local QGIS python plugins directory","text":"<p>When developing, in order to try out the plugin locally you need to call <code>poetry run python pluginadmin.py install</code> command. This command will copy all files into your local QGIS python plugins directory. Upon making changes to the code you will need to call this installation command again and potentially also restart QGIS.</p> <pre><code>poetry run python pluginadmin.py install\n</code></pre> <p>Info</p> <p>Perhaps a more robust set of instructions would be to:</p> <ul> <li>Create a custom QGIS user profile for development (here named <code>conefor-dev</code>)</li> <li>Create a sample QGIS project to aid in development (here named <code>qgisconefor-sample-project.qgz</code>)</li> <li>execute the following:</li> </ul> <pre><code>poetry run pluginadmin --qgis-profile conefor-dev install \\\n    &amp;&amp; qgis \\\n        --profiles-path ${HOME}/.local/share/QGIS/QGIS3 \\\n        --profile conefor-dev \\\n        --project qgisconefor-sample-project.qgz\n</code></pre>"},{"location":"development/#releasing-new-versions","title":"Releasing new versions","text":"<p>This plugin uses an automated release process that is based upon github actions. New versions shall be released under the semantic versioning contract.</p> <p>In order to have a new version of the plugin release:</p> <ul> <li> <p>Be sure to have updated the <code>CHANGELOG.md</code></p> </li> <li> <p>Be sure to have updated the version on the <code>pyproject.toml</code> file. You can either   manually modify the <code>tool.poetry.version</code> key, or you can run the   <code>poetry version {version specifier}</code> command</p> </li> <li> <p>Create a new git annotated tag and push it to the repository. The tag name must   follow the <code>v{major}.{minor}.{patch}</code> convention, for example:</p> </li> </ul> <pre><code>git tag -a -m 'version 0.3.2' v0.3.2\ngit push origin v0.3.2\n</code></pre> <ul> <li>Github actions will take it from there. The new release shall appear in the custom   QGIS plugin repo shortly</li> </ul>"},{"location":"user-guide/","title":"User guide","text":"<p>QGIS Conefor is a plugin for the Open Source GIS software QGIS that allows to interact with  the Conefor application.</p> <p>This plugin includes an interface which can be used for preparing inputs to use by Conefor as a separate application.</p> Running Conefor algorithms from inside QGIS <p>This plugin also aims to provide a bridge between QGIS and Conefor, allowing you to run Conefor's landscape  connectivity analysis algorithms from inside QGIS, through the QGIS Processing framework/toolbox. </p> <p>This feature is still work-in-progress and is therefore not available yet. When ready, it will present a  convenient environment for landscape and habitat analysis, enabling Conefor algorithms to be directly integrated  in more complex workflows through models and scripts and use all other GIS algorithms included in the QGIS  processing framework/toolbox.</p> <p>Stay tuned for future updates on the landing of this feature.</p> <p>Once installed, the plugin tools can be reached in different places:</p> <ul> <li>From the main menu: vector &gt; Conefor inputs</li> <li>The Vector toolbar also shows a button to launch the plugin dialog</li> <li>Processing toolbox (see below, \"Using Conefor inside QGIS\" paragraph)</li> </ul> QGIS toolbars <p>In QGIS the toolbars can be activated/deactivated by using the following menu:</p> <p>View &gt; toolbars</p> <p>The content of a toolbar may vary depending on what tools/plugins are installed/active in a specific QGIS  installation. The Conefor plugin is part of the Vector Toolbar toolbar.</p>"},{"location":"user-guide/#usage","title":"Usage","text":"<p>This plugin is used for generating the Conefor input files (nodes and connections) from geospatial layers and then  running the standalone Conefor application with the these input files. For this you can either:</p> <ul> <li>Use the plugin's main dialog</li> <li>Use the Processing algorithms present in Processing toolbox &gt; Conefor &gt; Prepare input files</li> </ul>"},{"location":"user-guide/#preparing-inputs-for-conefor","title":"Preparing inputs for Conefor","text":""},{"location":"user-guide/#using-the-dedicated-conefor-plugin-dialog","title":"Using the dedicated Conefor plugin dialog","text":"<p>The icon/shortcut available in the Vector &gt; Conefor inputs menu or in the Vector toolbar provides access to a dialog that allows you to create the input files to be then processed with the Conefor application. </p> <p>The dialog allows to compute distance analysis and node (feature) queries:</p> <ul> <li>Distance from edges</li> <li>Distance from centroids</li> <li>Compute area of polygons</li> <li>Extract one attribute</li> </ul> <p>The results are placed into (separate) text files (with the .txt file extension) inside an output folder.</p> <p>Tip</p> <p>For information on how you would use the plugin-generated files as inputs to Conefor, please see the  Conefor user manual. </p> <p>The dialog looks like this:</p> <p></p> <ol> <li> <p>Layer selector - When clicked, this turns into a combobox, allowing you to select one of the layers that are      currently loaded in QGIS as the target for Conefor inputs generation;</p> </li> <li> <p>Node ID selector - Select one of the attributes of the layer to be used as the Conefor node identifier. Only      attributes of type integer are acceptable. Moreover, in order for the attribute to be usable as a node identifier,      each feature in the input layer must have a unique value. </p> <p>Alternatively to selecting an existing layer attribute, you may also choose the <code>&lt;AUTOGENERATE&gt;</code> option. This will  result in the creation of a new in-memory layer named <code>{layer-name}_conefor</code> (in which <code>{layer-name}</code> is the name  of the original layer), which is a copy of the original input layer, with the addition of a new column  named <code>conefor_node_id</code>. This will allow you to match the node ids generated by the plugin to their  corresponding layer features. </p> <p>Tip</p> <p>Don't forget to save this new layer if you want to keep it, as in-memory layers are  deleted when QGIS closes!</p> </li> <li> <p>Node attribute selector - Select one of the attributes of the layer to be used as the Conefor attribute. Only      numeric attributes are acceptable.</p> <p>Similarly to the Node ID selector, you may choose the <code>&lt;GENERATE_FROM_AREA&gt;</code> option, which will result in the  creation of a new in-memory layer with a new column named <code>conefor_node_attribute(area)</code>. This column has the area  of each feature, which is then used as the Conefor node attribute.</p> <p>Tip</p> <p>You can combine both the autogeneration of a node id and the autogeneration of a node attribute, which would  result in the generation of a single in-memory QGIS layer with a copy of the original layer and the addition of the two <code>conefor_node_id</code> and <code>conefor_node_attribute(area)</code> columns.</p> Info <p>Autogeneration of the Conefor node attribute by using feature areas reuses the following QGIS Processing  toolbox algorithms:</p> <ul> <li>Add geometry attributes - Area is calculated using the <code>ellispoidal</code> option</li> <li>Drop field(s)</li> <li>Rename field</li> </ul> </li> <li> <p>Nodes to add selector - You can optionally select one of the input layer's attributes that should be used as the    Conefor nodes to add field. This attribute must only have integer values of <code>0</code> and <code>1</code>. Read more this feature on    the Conefor user manual.</p> </li> <li> <p>Add/Remove layer buttons - These buttons allow you to add and remove layers to be processed. Note that the      <code>Remove layer</code> button always removes the last layer of the list</p> </li> <li> <p>Node distance method selector - These radio buttons allow you to select one distance calculation method, which     will be used to generate the Conefor distances file. Choose one of:</p> <ul> <li><code>Edge distances</code> - Calculates distances between pairs of features by measuring the distance between their     closest edges</li> <li><code>Centroid distances</code> - Calculates distances between pairs of features by measuring the distance between their     geometric centroids</li> </ul> <p>Distance calculation and Coordinate Reference Systems (CRS)</p> <p>When calculating distances it is a good idea to ensure that layers use a projected CRS. </p> <p>In this plugin, if the input layer's CRS is projected, then distance calculation uses it directly. On the  contrary, if the CRS of the layer is geographic, the plugin will fallback to using the CRS of the QGIS  project - it simply transforms each input feature into the QGIS project's CRS (expecting it to be projected,  but without checking) perform distance calculations.</p> <p>If your input layers use a geographic CRS, such as WGS84 (EPSG:4326), you should either reproject them first  or set an appropriate CRS in the QGIS project settings.</p> </li> <li> <p>Lock field names to first layer selector - If you add a large number of layers with similar names for      their corresponding attributes, you can opt to specify the <code>node id</code>/<code>node attribute</code>/<code>nodes to add</code> values for the     first layer and have this selection be automatically replicated to all layers in the list.</p> </li> <li> <p>Only use selected features selector - Restrict the Conefor input files to contain information related to the      currently selected features</p> </li> <li> <p>Output directory selector - Choose the output directory for the generated Conefor node and connection files.      The output files will be put inside the selected directory and will be named like:</p> <ul> <li><code>nodes_{node-column-name}_{layer-name}[_{increment}].txt</code></li> <li><code>distances_{edges | centroids}_{layer-name}[_{increment}].txt</code></li> </ul> <p>Where <code>_{increment}</code> may be present if there is already another file with the same name, in which case the increment is simple numeric increment, used to diferentiate between them.</p> <p>For example, if a layer is named <code>espacios_natura2000</code>, the possible output name combinations will be:</p> <ul> <li><code>nodes_conefor_node_attribute_(area)_espacios_natura2000.txt</code></li> <li><code>nodes_NODE_ATTRIBUTE_espacios_natura2000.txt</code></li> <li><code>nodes_NODE_ATTRIBUTE_espacios_natura2000_2.txt</code></li> <li><code>distances_centroids_espacios_natura2000.txt</code></li> <li><code>distances_edges_espacios_natura2000.txt</code></li> <li><code>distances_edges_espacios_natura2000_2.txt</code></li> </ul> </li> <li> <p>Plugin help button - Press the <code>Help</code> button to be taken to the homepage of the plugin, where you can find      this user guide</p> </li> <li> <p>OK/Cancel button - Use the <code>OK</code> button to proceed with the generation of the Conefor input files or the <code>Cancel</code>     button to close the plugin dialog without performing any further action</p> </li> </ol>"},{"location":"user-guide/#plugin-execution","title":"Plugin execution","text":"<p>When running, the plugin dialog will close itself and the processing will be taking place as a background task,  with the progress being displayed in QGIS status bar (number 1 in the image below).</p> <p></p> <p>Clicking on the progress indicator opens up a small pop-up dialog where you can inspect the progress with a bit  more detail (see number 2 in the image) and cancel ongoing calculations (number 3 in the image). </p> <p>When finished, the plugin displays a notification in the main QGIS message bar to let you know its work is done.  If something went wrong, it will show an error description.</p> <p></p>"},{"location":"user-guide/#geometry-related-errors","title":"Geometry-related errors","text":"<p>Whenever an input layer has invalid geometries the plugin will use the same strategy as other Processing algorithms,  and which can be configured in the main QGIS settings. Starting in the QGIS main menu, navigate to </p> <p>Settings -&gt; Options... -&gt; Processing -&gt; General -&gt; Invalid features filtering</p> <p>There are several options to choose, which affect how the QGIS Processing framework deals with invalid geometries:</p> <ul> <li>Stop algorithm execution when a geometry is invalid</li> <li>Do not filter (better performance)</li> <li>Skip (ignore) features with invalid geometries</li> </ul> <p>Choose the option which is more appropriate for your use case, keeping in mind that for the Conefor plugin, valid  geometries are only needed when autogenerating the node attribute based on the area of a feature.</p> <p>Warning</p> <p>The settings which control how the Processing framework deal with invalid geometries apply to QGIS as a whole.</p>"},{"location":"user-guide/#using-the-processing-toolbox-algorithms","title":"Using the Processing toolbox algorithms","text":"<p>This plugin's execution code is implemented as set of QGIS Processing algorithms. Therefore, regardless of if you are using the custom plugin dialog, or the dialogs shown via the Processing toolbox, the code runs in the same way. This  means that execution options are mostly the same, with the notable difference that running via Processing uses a generic dialog that gets automatically created by QGIS.</p> <p>Tip</p> <p>Running via Processing also unlocks integrating this plugin with other algorithms, perhaps by creating complex  Processing workflows with its Model Designer, or via custom scripts.</p> <p>The QGIS documentation has a comprehensive section on Processing.</p> <p>Looking at the QGIS Processing Toolbox panel, you will find a section named Conefor. Expanding it will show the  following structure:</p> <ul> <li> <p><code>Prepare input files -&gt; Generate input files from point layer</code> </p> </li> <li> <p><code>Prepare input files -&gt; Generate input files from polygon layer</code></p> </li> </ul> <p>Note that even though the custom dialog only allows the processing of vector layers that have Polygon geometries,  which is the main use case for this plugin, using the Processing toolbox allows you to make use of layers with Point  geometries too, if needed.</p> <p></p> <p>Tip</p> <p>You can enable the Processing toolbox by navigating to Processing -&gt; toolbox in the QGIS main menu</p> <p>When choosing any of these two algorithms a new dialog pops up, with a set of user interface controls that mimick what  has been described above in the section about the custom plugin dialog</p>"}]}